var app=angular.module("cg",["ngRoute","ngAnimate"]);app.config(["$routeProvider","$locationProvider",function(t,l){t.when("/",{templateUrl:"partials/home.html",controller:"MainCtrl"}).when("/projects",{templateUrl:"partials/projects.html",controller:"ProjectCtrl"}).when("/contact",{templateUrl:"partials/contact.html",controller:"ContactCtrl"}).when("/skillset",{templateUrl:"partials/skillset.html",controller:"SkillsetCtrl"}),l.html5Mode(!0)}]);

angular.module("cg").controller("ContactCtrl",["$scope","$rootScope","$http",function(t,o,n){o.currState="contact",t.submit=function(o){return n.post("/contact",o).then(function(o){console.log("Success: "+o),200==o.status&&(t.emailSent=!0)},function(t){console.log("Error: "+t)})},t.checkDisabled=function(t){if(t.email.$invalid)return!0}}]);
angular.module("cg").controller("MainCtrl",["$scope","$rootScope",function(o,r){r.currState="home"}]);
angular.module("cg").controller("ProjectCtrl",["$scope","$rootScope","$projectService",function(t,o,e){o.currState="projects";e.getProjects().success(function(o){angular.forEach(o,function(t){t.tagsDisplay=t.tags.join(", ")}),t.projects=o,t.dataLoaded=!0}).error(function(t){console.log("Failed to get projects. Error: "+t)});t.toggleLayout=function(o){o?t.layoutClass=o:t.layoutClass="list-layout"==t.layoutClass?"grid-layout":"list-layout"},t.toggleLayout("list-layout"),t.filterFxn=function(o){return!t.filterQuery||o.name.toLowerCase().indexOf(t.filterQuery)!=-1||o.tags.toString().toLowerCase().indexOf(t.filterQuery)!=-1}}]);
angular.module("cg").controller("SkillsetCtrl",["$scope","$rootScope","$http",function(t,l,o){l.currState="skillset"}]);
angular.module("cg").service("$projectService",["$http",function(e){this.getProjects=function(){return e.get("/api/projects")}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsInJvdXRlcy5qcyIsImNvbnRyb2xsZXJzL0NvbnRhY3RDdHJsLmpzIiwiY29udHJvbGxlcnMvTWFpbkN0cmwuanMiLCJjb250cm9sbGVycy9Qcm9qZWN0Q3RybC5qcyIsImNvbnRyb2xsZXJzL1NraWxsc2V0Q3RybC5qcyIsInNlcnZpY2VzL1Byb2plY3RTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImFwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImh0bWw1TW9kZSIsIiRzY29wZSIsIiRyb290U2NvcGUiLCIkaHR0cCIsImN1cnJTdGF0ZSIsInN1Ym1pdCIsImZvcm1EYXRhIiwicG9zdCIsInRoZW4iLCJyZXNwb25zZSIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJlbWFpbFNlbnQiLCJjaGVja0Rpc2FibGVkIiwiY29udGFjdCIsImVtYWlsIiwiJGludmFsaWQiLCIkcHJvamVjdFNlcnZpY2UiLCJnZXRQcm9qZWN0cyIsInN1Y2Nlc3MiLCJwcm9qZWN0cyIsImZvckVhY2giLCJwcm9qZWN0IiwidGFnc0Rpc3BsYXkiLCJ0YWdzIiwiam9pbiIsImRhdGFMb2FkZWQiLCJlcnJvciIsImVyciIsInRvZ2dsZUxheW91dCIsIndoaWNoIiwibGF5b3V0Q2xhc3MiLCJmaWx0ZXJGeG4iLCJpdGVtIiwiZmlsdGVyUXVlcnkiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJpbmRleE9mIiwidG9TdHJpbmciLCJzZXJ2aWNlIiwidGhpcyIsImdldCJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBSUEsS0FBTUMsUUFBUUMsT0FBTyxNQUFPLFVBQVcsYUFHM0NGLEtBQUlHLFFBQVEsaUJBQWtCLG9CQUFxQixTQUFTQyxFQUFnQkMsR0FDM0VELEVBQ0VFLEtBQUssS0FDTEMsWUFBYSxxQkFDYkMsV0FBWSxhQUVaRixLQUFLLGFBQ0xDLFlBQWEseUJBQ2JDLFdBQVksZ0JBRVpGLEtBQUssWUFDTEMsWUFBYSx3QkFDYkMsV0FBWSxnQkFFWkYsS0FBSyxhQUNMQyxZQUFhLHlCQUNiQyxXQUFZLGlCQUdkSCxFQUFrQkksV0FBVTtBQ3RCN0I7QUNBQVIsUUFBUUMsT0FBTyxNQUFNTSxXQUFXLGVBQWdCLFNBQVUsYUFBYyxRQUFTLFNBQVNFLEVBQVFDLEVBQVlDLEdBRTdHRCxFQUFXRSxVQUFZLFVBRXZCSCxFQUFPSSxPQUFTLFNBQVNDLEdBQ3hCLE1BQU9ILEdBQU1JLEtBQUssV0FBWUQsR0FBVUUsS0FBSyxTQUFTQyxHQUNyREMsUUFBUUMsSUFBSSxZQUFjRixHQUNILEtBQW5CQSxFQUFTRyxTQUNaWCxFQUFPWSxXQUFZLElBRWxCLFNBQVNKLEdBQ1hDLFFBQVFDLElBQUksVUFBWUYsTUFJMUJSLEVBQU9hLGNBQWdCLFNBQVNDLEdBQy9CLEdBQUlBLEVBQVFDLE1BQU1DLFNBQ2pCLE9BQU87QUNqQlZ6QixRQUFRQyxPQUFPLE1BQU1NLFdBQVcsWUFBYSxTQUFTLGFBQWMsU0FBU0UsRUFBUUMsR0FFakZBLEVBQVdFLFVBQVk7QUNGM0JaLFFBQVFDLE9BQU8sTUFBTU0sV0FBVyxlQUFnQixTQUFVLGFBQWMsa0JBQW1CLFNBQVNFLEVBQVFDLEVBQVlnQixHQUV2SGhCLEVBQVdFLFVBQVksVUFFUmMsR0FBZ0JDLGNBQWNDLFFBQVEsU0FBU0MsR0FDN0Q3QixRQUFROEIsUUFBUUQsRUFBVSxTQUFTRSxHQUNsQ0EsRUFBUUMsWUFBY0QsRUFBUUUsS0FBS0MsS0FBSyxRQUV6Q3pCLEVBQU9vQixTQUFXQSxFQUNsQnBCLEVBQU8wQixZQUFhLElBQ2xCQyxNQUFNLFNBQVNDLEdBQ2pCbkIsUUFBUUMsSUFBSSxrQ0FBb0NrQixJQUdqRDVCLEdBQU82QixhQUFlLFNBQVNDLEdBQzFCQSxFQUNIOUIsRUFBTytCLFlBQWNELEVBRXJCOUIsRUFBTytCLFlBQXFDLGVBQXRCL0IsRUFBTytCLFlBQWdDLGNBQWdCLGVBRy9FL0IsRUFBTzZCLGFBQWEsZUFFcEI3QixFQUFPZ0MsVUFBWSxTQUFTQyxHQUUzQixPQUFLakMsRUFBT2tDLGFBQ1ZELEVBQUtFLEtBQUtDLGNBQWNDLFFBQVFyQyxFQUFPa0Msa0JBQ3ZDRCxFQUFLVCxLQUFLYyxXQUFXRixjQUFjQyxRQUFRckMsRUFBT2tDO0FDM0J0RDNDLFFBQVFDLE9BQU8sTUFBTU0sV0FBVyxnQkFBaUIsU0FBVSxhQUFjLFFBQVMsU0FBU0UsRUFBUUMsRUFBWUMsR0FFOUdELEVBQVdFLFVBQVk7QUNGeEJaLFFBQVFDLE9BQU8sTUFBTStDLFFBQVEsbUJBQW9CLFFBQVMsU0FBU3JDLEdBRWxFc0MsS0FBS3RCLFlBQWMsV0FDbEIsTUFBT2hCLEdBQU11QyxJQUFJIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ2NnJywgWyduZ1JvdXRlJywgJ25nQW5pbWF0ZSddKTtcblxuXG5hcHAuY29uZmlnKFsnJHJvdXRlUHJvdmlkZXInLCAnJGxvY2F0aW9uUHJvdmlkZXInLCBmdW5jdGlvbigkcm91dGVQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIpIHtcblx0JHJvdXRlUHJvdmlkZXJcblx0XHQud2hlbignLycsIHtcblx0XHRcdHRlbXBsYXRlVXJsOiAncGFydGlhbHMvaG9tZS5odG1sJyxcblx0XHRcdGNvbnRyb2xsZXI6ICdNYWluQ3RybCdcblx0XHR9KVxuXHRcdC53aGVuKCcvcHJvamVjdHMnLCB7XG5cdFx0XHR0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL3Byb2plY3RzLmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ1Byb2plY3RDdHJsJ1xuXHRcdH0pXG5cdFx0LndoZW4oJy9jb250YWN0Jywge1xuXHRcdFx0dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9jb250YWN0Lmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ0NvbnRhY3RDdHJsJ1xuXHRcdH0pXG5cdFx0LndoZW4oJy9za2lsbHNldCcsIHtcblx0XHRcdHRlbXBsYXRlVXJsOiAncGFydGlhbHMvc2tpbGxzZXQuaHRtbCcsXG5cdFx0XHRjb250cm9sbGVyOiAnU2tpbGxzZXRDdHJsJ1xuXHRcdH0pO1xuXG5cdCRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcblxufV0pO1xuXG5cblxuIiwiIiwiYW5ndWxhci5tb2R1bGUoJ2NnJykuY29udHJvbGxlcignQ29udGFjdEN0cmwnLCBbJyRzY29wZScsICckcm9vdFNjb3BlJywgJyRodHRwJywgZnVuY3Rpb24oJHNjb3BlLCAkcm9vdFNjb3BlLCAkaHR0cCkge1xuXG5cdCRyb290U2NvcGUuY3VyclN0YXRlID0gXCJjb250YWN0XCI7XG5cblx0JHNjb3BlLnN1Ym1pdCA9IGZ1bmN0aW9uKGZvcm1EYXRhKSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9jb250YWN0JywgZm9ybURhdGEpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcblx0XHRcdGNvbnNvbGUubG9nKCdTdWNjZXNzOiAnICsgcmVzcG9uc2UpO1xuXHRcdFx0aWYgKHJlc3BvbnNlLnN0YXR1cyA9PSAyMDApIHtcblx0XHRcdFx0JHNjb3BlLmVtYWlsU2VudCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcblx0XHRcdGNvbnNvbGUubG9nKCdFcnJvcjogJyArIHJlc3BvbnNlKVxuXHRcdH0pO1xuXHR9XG5cblx0JHNjb3BlLmNoZWNrRGlzYWJsZWQgPSBmdW5jdGlvbihjb250YWN0KSB7XG5cdFx0aWYgKGNvbnRhY3QuZW1haWwuJGludmFsaWQpIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblx0fVxuXG59XSk7IiwiYW5ndWxhci5tb2R1bGUoJ2NnJykuY29udHJvbGxlcignTWFpbkN0cmwnLCBbJyRzY29wZScsJyRyb290U2NvcGUnLCBmdW5jdGlvbigkc2NvcGUsICRyb290U2NvcGUpIHtcblxuICAgICRyb290U2NvcGUuY3VyclN0YXRlID0gXCJob21lXCI7XG5cbn1dKTsiLCJhbmd1bGFyLm1vZHVsZSgnY2cnKS5jb250cm9sbGVyKCdQcm9qZWN0Q3RybCcsIFsnJHNjb3BlJywgJyRyb290U2NvcGUnLCAnJHByb2plY3RTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCAkcm9vdFNjb3BlLCAkcHJvamVjdFNlcnZpY2UpIHtcblxuXHQkcm9vdFNjb3BlLmN1cnJTdGF0ZSA9IFwicHJvamVjdHNcIjtcblxuXHR2YXIgcHJvamVjdHMgPSAkcHJvamVjdFNlcnZpY2UuZ2V0UHJvamVjdHMoKS5zdWNjZXNzKGZ1bmN0aW9uKHByb2plY3RzKSB7XG5cdFx0YW5ndWxhci5mb3JFYWNoKHByb2plY3RzLCBmdW5jdGlvbihwcm9qZWN0KSB7XG5cdFx0XHRwcm9qZWN0LnRhZ3NEaXNwbGF5ID0gcHJvamVjdC50YWdzLmpvaW4oJywgJyk7XG5cdFx0fSk7XG5cdFx0JHNjb3BlLnByb2plY3RzID0gcHJvamVjdHM7XG5cdFx0JHNjb3BlLmRhdGFMb2FkZWQgPSB0cnVlO1xuXHR9KS5lcnJvcihmdW5jdGlvbihlcnIpIHtcblx0XHRjb25zb2xlLmxvZyhcIkZhaWxlZCB0byBnZXQgcHJvamVjdHMuIEVycm9yOiBcIiArIGVycik7XG5cdH0pO1xuXHRcdFxuXHQkc2NvcGUudG9nZ2xlTGF5b3V0ID0gZnVuY3Rpb24od2hpY2gpIHtcblx0XHRpZiAod2hpY2gpIHtcblx0XHRcdCRzY29wZS5sYXlvdXRDbGFzcyA9IHdoaWNoO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQkc2NvcGUubGF5b3V0Q2xhc3MgPSAoJHNjb3BlLmxheW91dENsYXNzID09IFwibGlzdC1sYXlvdXRcIikgPyBcImdyaWQtbGF5b3V0XCIgOiBcImxpc3QtbGF5b3V0XCI7IFxuXHRcdH1cblx0fVxuXHQkc2NvcGUudG9nZ2xlTGF5b3V0KCdsaXN0LWxheW91dCcpO1xuXG5cdCRzY29wZS5maWx0ZXJGeG4gPSBmdW5jdGlvbihpdGVtKSB7XG5cdFx0ZGVidWdnZXI7XG5cdFx0aWYgKCEkc2NvcGUuZmlsdGVyUXVlcnkgfHwgXG5cdFx0XHQoaXRlbS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigkc2NvcGUuZmlsdGVyUXVlcnkpICE9IC0xKSB8fCBcblx0XHRcdChpdGVtLnRhZ3MudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJHNjb3BlLmZpbHRlclF1ZXJ5KSAhPSAtMSkpIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblxufV0pOyIsImFuZ3VsYXIubW9kdWxlKCdjZycpLmNvbnRyb2xsZXIoJ1NraWxsc2V0Q3RybCcsIFsnJHNjb3BlJywgJyRyb290U2NvcGUnLCAnJGh0dHAnLCBmdW5jdGlvbigkc2NvcGUsICRyb290U2NvcGUsICRodHRwKSB7XG5cblx0JHJvb3RTY29wZS5jdXJyU3RhdGUgPSBcInNraWxsc2V0XCI7XG5cbn1dKTsiLCJhbmd1bGFyLm1vZHVsZSgnY2cnKS5zZXJ2aWNlKCckcHJvamVjdFNlcnZpY2UnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApIHtcblxuXHR0aGlzLmdldFByb2plY3RzID0gZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9wcm9qZWN0cycpO1xuXHR9XG5cbn1dKSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
